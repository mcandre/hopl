#!/usr/bin/env runhaskell

-- Andrew Pennebaker
-- andrew.pennebaker@gmail.com
-- 19 Aug 2011
--
-- Data from "Timeline of programming languages"
-- http://en.wikipedia.org/wiki/Timeline_of_programming_languages
--
-- Inspired by O'Reilly's "The History of Programming Languages"
-- http://oreilly.com/news/languageposter_0504.html
--
-- Requirements:
--
-- Haskell 2011 (http://haskell.org/)
-- Haskell graphviz (http://hackage.haskell.org/packages/archive/graphviz/latest/doc/html/Data-GraphViz.html)
-- Graphviz (http://www.graphviz.org/)

module Hopl where

import Data.Graph.Inductive
import Data.GraphViz

langGraph :: Gr String String
langGraph = mkGraph [
		(-7000, "Pythagoras"),
		(-6000, "Music"),
		(-5000, "Musical boxes"),
		(-4000, "Coockoo clocks"),
		(-2000, "Jacquard loom punch cards"),
		(-1000, "Analytical Engine order code"),
		(-900, "Number theory"),
		(-850, "Set theory"),
		(-825, "Combinatory logic"),
		(-820, "Lambda calculus"),
		(-815, "SKI combinators"),
		(-810, "Logic programming"),
		(-800, "Player pianos"),
		(-778, "Transistors"),
		(-777, "Integrated circuits"),
		(-775, "Cams"),
		(-750, "Turing machines"),
		(-725, "Plankalkül"),
		(-600, "Assembly"),
		(-500, "Numerical control languages"),
		(-450, "G-code"),
		(-400, "ENIAC Short Code"),
		(-300, "Brief Code"),
		(-200, "Short Code"),
		(0, "FORTRAN"),
		(1, "IBM 1401 FORTRAN"),
		(2, "FORTRAN II"),
		(3, "FORTRAN III"),
		(4, "FORTRAN IV"),
		(5, "FORTRAN V"),
		(6, "FORTRAN 66"),
		(7, "FORTRAN 77"),
		(8, "FORTRAN 90"),
		(9, "FORTRAN 95"),
		(10, "FORTRAN 2003"),
		(11, "FORTRAN 2008"),
		(12, "ALGOL 58"),
		(-99, "IPL"),
		(-100, "LISP"),
		(13, "ALGOL 60"),
		(14, "ALGOL 68"),
		(15, "CPL"),
		(16, "BCPL"),
		(17, "B"),
		(18, "C"),
		(19, "K&R C"),
		(20, "ANSI C"),
		(21, "ISO C"),
		(22, "C99"),
		(23, "C1X"),
		(-5, "A-0"),
		(-6, "A-1"),
		(-7, "A-2"),
		(-8, "ARITH-MATIC"),
		(-9, "MATH-MATIC"),
		(24, "FLOW-MATIC"),
		(-10, "COMTRAN"),
		(-13, "Controlled natural languages"),
		(-12, "Basic English international auxiliary language"),
		(-11, "FACT"),
		(25, "COBOL"),
		(26, "ANS COBOL"),
		(27, "COBOL 74"),
		(28, "COBOL 85"),
		(29, "OO COBOL"),
		(30, "COBOL 2002"),
		(31, "PL/I"),
		(32, "XPL"),
		(33, "PL/M"),
		(34, "PL/P"),
		(35, "PL/C"),
		(36, "PL/S"),
		(37, "EPL"),
		(38, "APL"),
		(39, "APL2"),
		(40, "Simula I"),
		(41, "Simula 67"),
		(42, "Smalltalk"),
		(43, "Smalltalk-71"),
		(44, "Smalltalk-76"),
		(45, "Smalltalk-80"),
		(46, "Squeak"),
		(47, "AppleScript"),
		(48, "Logo"),
		(49, "REBOL"),
		(50, "REBOL 2"),
		(51, "REBOL 3"),
		(52, "Self"),
		(53, "Self 4"),
		(54, "SNOBOL"),
		(55, "SNOBOL3"),
		(56, "AppleScript 2"),
		(57, "HyperCard"),
		(58, "SNOBOL4"),
		(59, "Icon"),
		(60, "Python"),
		(61, "ABC"),
		(62, "Pascal"),
		(63, "Modula"),
		(64, "Modula-2"),
		(65, "Modula-3"),
		(66, "Ada"),
		(67, "C with Classes"),
		(68, "Common Lisp"),
		(69, "ANSI Common Lisp"),
		(70, "Scheme"),
		(71, "DrScheme"),
		(72, "PLT Scheme"),
		(73, "Racket"),
		(74, "AllegroCL"),
		(75, "CLISP"),
		(76, "CMUCL"),
		(77, "SBCL"),
		(78, "ECL"),
		(79, "GCL"),
		(80, "LispWorks"),
		(81, "Lisp 1.5"),
		(82, "MACLISP"),
		(83, "INTERLISP"),
		(84, "MDL"),
		(85, "ZIL"),
		(86, "ZILF"),
		(87, "PDP-6 Lisp"),
		(88, "PDP-10 Lisp"),
		(89, "PDP-1 Lisp"),
		(90, "BBN LISP"),
		(91, "awk"),
		(92, "Thompson shell"),
		(93, "Bourne shell"),
		(94, "Korn shell"),
		(95, "Perl"),
		(96, "C shell"),
		(97, "tcsh"),
		(98, "Ada 95"),
		(99, "Ada 2005"),
		(-50, "ISWIM"),
		(100, "ML"),
		(101, "Standard ML"),
		(102, "MLton"),
		(103, "MLWorks"),
		(104, "SML/NJ"),
		(105, "Mythryl"),
		(106, "Caml"),
		(107, "Caml Light"),
		(108, "OCaml"),
		(109, "JOSS"),
		(110, "MUMPS"),
		(111, "PSL"),
		(112, "Caché ObjectScript"),
		(113, "BASIC"),
		(114, "Bash"),
		(115, "x86"),
		(116, "RISC"),
		(117, "ARC"),
		(118, "Arc"),
		(119, "ARM"),
		(120, "DEC Alpha"),
		(121, "29k"),
		(122, "Apple PowerPC"),
		(123, "SPARC"),
		(124, "COMAL"),
		(125, "Microsoft Visual Basic"),
		(126, "Microsoft VBScript"),
		(127, "Microsoft ASP"),
		(128, "Microsoft Windows PowerShell"),
		(129, "Hope"),
		(130, "Miranda"),
		(131, "Haskell"),
		(132, "SASL"),
		(133, "KRC"),
		(134, "Hope+"),
		(135, "FP"),
		(136, "FL"),
		(137, "FPr"),
		(138, "J"),
		(139, "Lazy ML"),
		(140, "Orwell"),
		(141, "Id"),
		(142, "nawk"),
		(143, "Eiffel"),
		(144, "Eiffel 2"),
		(145, "Eiffel 3"),
		(146, "Eiffel 4"),
		(147, "Apple Objective-C"),
		(148, "Mesa"),
		(149, "Cedar"),
		(150, "Sun Oak"),
		(151, "Sun Java"),
		(152, "Rexx"),
		(153, "Rexx 2"),
		(154, "Rexx 3"),
		(155, "Object Rexx"),
		(156, "Sun Java 2"),
		(157, "Oberon"),
		(158, "Oberon-2"),
		(159, "NetRexx"),
		(160, "C++"),
		(161, "ANSI/ISO C++"),
		(162, "Microsoft C#"),
		(163, "ECMA C#"),
		(164, "ISO C#"),
		(165, "C--"),
		(166, "LiveScript"),
		(167, "NetScape JavaScript"),
		(168, "Microsoft JScript"),
		(169, "ECMAScript"),
		(170, "NetScape JavaScript 1.5"),
		(171, "Adobe ActionScript"),
		(172, "Adobe ActionScript 2"),
		(173, "Perl 3"),
		(174, "Perl 4"),
		(175, "Perl 5"),
		(176, "Perl 6"),
		(177, "PHP"),
		(178, "PHP 2"),
		(179, "PHP 3"),
		(180, "PHP 4"),
		(181, "Ruby"),
		(182, "Ruby 1.6"),
		(183, "Ruby 1.8"),
		(184, "Ruby 1.9"),
		(185, "Python 2"),
		(186, "Python 3"),
		(187, "ANSI MUMPS"),
		(188, "FIPS MUMPS"),
		(189, "ISO MUMPS"),
		(190, "M"),
		(191, "ANSI M"),
		(192, "Open M"),
		(193, "ISO M"),
		(194, "Delphi"),
		(195, "Haskell 98"),
		(196, "Haskell 2010"),
		(197, "Clos"),
		(198, "Dylan"),
		(199, "MIT Scheme"),
		(200, "Scheme 84"),
		(201, "IEEE Scheme"),
		(202, "Scheme R5RS"),
		(203, "Scheme R6RS"),
		(204, "Caml 2"),
		(205, "Caml 3"),
		(206, "PHP 5"),
		(207, "qed"),
		(208, "ed"),
		(209, "sed"),
		(210, "Psycho"),
		(211, "PyPy"),
		(212, "Jython"),
		(213, "JRuby"),
		(214, "Stackless Python"),
		(215, "Prolog"),
		(216, "Erlang"),
		(217, "Pizza"),
		(218, "GJ"),
		(219, "Sun J2SE 5"),
		(220, "Sun J2SE 6"),
		(221, "Scala"),
		(222, "Fantom"),
		(223, "CLU"),
		(224, "Lua"),
		(225, "Lua 2"),
		(226, "Lua 3"),
		(227, "Lua 4"),
		(228, "Lua 5"),
		(229, "Squirrel"),
		(230, "CMS EXEC"),
		(231, "EXEC 2"),
		(232, "Felix"),
		(233, "Microsoft F#"),
		(234, "VAL"),
		(235, "SISAL"),
		(236, "SAC"),
		(237, "Nu"),
		(238, "Wolfram Mathematica"),
		(239, "LPC"),
		(240, "Pike"),
		(241, "µLPC"),
		(242, "FORTH"),
		(243, "Gforth"),
		(244, "Joy"),
		(245, "Cat"),
		(246, "Adobe PostScript"),
		(247, "Adobe PostScript level 2"),
		(248, "Adobe PostScript level 3"),
		(249, "Camelot"),
		(250, "Adobe PDF"),
		(251, "RPL"),
		(252, "Apple NewtonScript"),
		(253, "Cel"),
		(254, "Io"),
		(255, "Factor"),
		(256, "Potion"),
		(257, "IronPython"),
		(258, "IronRuby"),
		(259, "Delphi 5"),
		(260, "Delphi 6"),
		(261, "Delphi 7"),
		(262, "Sharp APL"),
		(263, "K"),
		(264, "Ioke"),
		(265, "A"),
		(266, "A+"),
		(267, "Microsoft Visual J++"),
		(268, "Microsoft J#"),
		(269, "Tcl"),
		(270, "Tea"),
		(271, "Tcl/Tk"),
		(272, "Tcl/Tk 8"),
		(273, "Object Logo"),
		(274, "Lua.NET"),
		(275, "NetScape JavaScript 1.8"),
		(276, "Prolog II"),
		(277, "Prolog III"),
		(278, "Prolog IV"),
		(279, "GNU Prolog"),
		(280, "Mercury"),
		(281, "Oz"),
		(282, "Alice"),
		(283, "Visual Prolog"),
		(284, "Clojure"),
		(285, "Lisp Machine Lisp"),
		(286, "S"),
		(287, "S+"),
		(288, "R"),
		(289, "CSP"),
		(290, "occam"),
		(291, "Newsqueak"),
		(292, "Alef"),
		(293, "Limbo"),
		(294, "Google Go"),
		(295, "Sather"),
		(296, "Cool"),
		(297, "Cool 2004"),
		(298, "Cool 2005"),
		(299, "Cool 2006"),
		(300, "Cool 2007"),
		(301, "Cool 2008"),
		(302, "unCool"),
		(303, "Digital Mars D"),
		(304, "Digital Mars D 2"),
		(305, "Digital Mars GDC"),
		(306, "Digital Mars LDC"),
		(307, "Cobra"),
		(308, "Boo"),
		(309, "Unladen Swallow"),
		(310, "Kahlua"),
		(311, "SETL"),
		(312, "NQC"),
		(313, "x86-64"),
		(314, "P′′"),
		(315, "von Neumann architecture"),
		(316, "HLA"),
		(317, "MASM"),
		(318, "TASM"),
		(319, "FASM"),
		(320, "Brainfuck"),
		(321, "Ook!"),
		(322, "NASM"),
		(323, "GNU Gas"),
		(324, "Doublefuck"),
		(325, "Dumbfuck"),
		(327, "Dimensifuck"),
		(328, "PATH"),
		(329, "SNUSP"),
		(330, "LNUSP"),
		(331, "Modular SNUSP"),
		(332, "Bloated SNUSP"),
		(333, "Blub"),
		(334, "BrainFNORD"),
		(335, "Fuckfuck"),
		(337, "Unary"),
		(338, "MGIFOS"),
		(339, "ASCII art"),
		(343, "pbrain"),
		(344, "Toadskin"),
		(345, "Quantum brainfuck"),
		(346, "RUBE"),
		(347, "RUBE II: Das Klickenklacker"),
		(348, "REDGREEN"),
		(349, "Thue"),
		(350, "SAIL"),
		(351, "TeX"),
		(352, "LaTeX"),
		(353, "Boolfuck"),
		(354, "RubE On Conveyor Belts"),
		(355, "Brainfork"),
		(356, "Brainhype"),
		(357, "Banana Scheme"),
		(358, "Game of Life"),
		(359, "Brainloller"),
		(360, "Braincopter"),
		(361, "Self-modifying Brainfuck"),
		(362, "Braintwist"),
		(363, "Redcode"),
		(364, "CISC"),
		(365, "Spoon"),
		(366, "Frink"),
		(367, "jQuery"),
		(368, "MooTools"),
		(369, "Dojo"),
		(370, "Prototype"),
		(371, "Node.js"),
		(372, "Groovy"),
		(373, "Newspeak"),
		(374, "Microsoft XNA"),
		(375, "Microsoft Kodu"),
		(376, "G"),
		(377, "MathScript"),
		(378, "LabVIEW"),
		(379, "LINPACK"),
		(380, "MINPACK"),
		(381, "EISPACK"),
		(382, "LAPACK"),
		(383, "JACKPAC"),
		(384, "MATLAB"),
		(385, "ABCL"),
		(386, "Coral Common Lisp"),
		(387, "Macintosh Allegro Common Lisp"),
		(388, "Apple Macintosh Common Lisp"),
		(389, "Digitool Macintosh Common Lisp"),
		(390, "MCL"),
		(391, "OpenMCL"),
		(392, "Clozure CL"),
		(393, "RMCL"),
		(394, "Mocklisp"),
		(395, "MLisp"),
		(396, "Gosling Emacs"),
		(397, "Multics PL/I"),
		(398, "MIT Multics"),
		(399, "Incompatible Timesharing System"),
		(400, "Tape Editor and Corrector"),
		(401, "E"),
		(402, "GNU Emacs"),
		(403, "Emacs Lisp"),
		(404, "Pyrex"),
		(405, "Cython"),
		(406, "GNU grep"),
		(407, "AT&T UNIX"),
		(408, "lex"),
		(409, "flex"),
		(410, "yacc"),
		(411, "GNU bison"),
		(412, "Pastel"),
		(413, "GNU gcc"),
		(414, "GNU gcj"),
		(415, "GNAT"),
		(416, "gobjc"),
		(417, "g77"),
		(418, "gfortran"),
		(419, "Application-specific integrated circuits"),
		(420, "Hardware description languages"),
		(421, "Very High Speed Integration Circuits"),
		(422, "VHDL"),
		(423, "ghdl"),
		(424, "LispWorks"),
		(425, "OpenMP"),
		(426, "CHILL"),
		(427, "Object CHILL"),
		(428, "SMP"),
		(429, "NUMA"),
		(430, "Unified Parallel C"),
		(431, "GNU g++"),
		(432, "LLVM"),
		(433, "Clang"),
		(434, "gnuplot"),
		(435, "GNU Octave"),
		(436, "SAGE"),
		(437, "Cayley"),
		(438, "Magma"),
		(439, "Project MAC"),
		(440, "Macsyma"),
		(441, "Maple"),
		(442, "AgentSheets"),
		(443, "LEGO Mindstorms"),
		(444, "LEGOsheets"),
		(445, "LEGO NXT-G"),
		(446, "Nial"),
		(447, "Franz Lisp"),
		(448, "XLISP 1"),
		(449, "XLISP 2"),
		(450, "AutoLisp"),
		(451, "AutoCAD"),
		(452, "XLISP-PLUS"),
		(453, "XLISP-STAT"),
		(454, "Nyquist"),
		(455, "ANIMAL"),
		(456, "Chicken Scheme"),
		(457, "GNU Guile"),
		(458, "Kawa"),
		(459, "Scheme R3RS"),
		(460, "XLISP 3"),
		(461, "CP/CMS"),
		(462, "Mono"),
		(463, "Google V8"),
		(464, "Microsoft Chakra"),
		(465, "Opera Linear A"),
		(466, "Opera Linear B"),
		(467, "Opera Futhark"),
		(468, "Opera Carakan"),
		(469, "Adobe Flash"),
		(470, "GNU Gnash"),
		(471, "Microsoft Silverlight"),
		(472, "Mozilla Spidermonkey"),
		(473, "Mozilla JägerMonkey"),
		(474, "KDE Konqueror KHTML"),
		(475, "Apple WebKit JavaScriptCore"),
		(476, "SquirrelFish"),
		(477, "Xerox Press"),
		(478, "Xerox InterPress")
	] $ map (\x -> (fst x, snd x, "")) [
		(-600, -400),
		(-400, -300),
		(-300, -200),
		(0, 1),
		(1, 2),
		(2, 3),
		(3, 4),
		(4, 5),
		(5, 6),
		(6, 7),
		(7, 8),
		(8, 9),
		(9, 10),
		(10, 11),
		(0, 12),
		(12, 13),
		(13, 14),
		(13, 15),
		(15, 16),
		(16, 17),
		(17, 18),
		(18, 19),
		(19, 20),
		(20, 21),
		(21, 22),
		(22, 23),
		(24, 25),
		(25, 26),
		(26, 27),
		(27, 28),
		(28, 29),
		(29, 30),
		(4, 31),
		(25, 31),
		(13, 31),
		(31, 32),
		(32, 33),
		(33, 34),
		(32, 35),
		(32, 36),
		(31, 37),
		(14, 38),
		(38, 39),
		(13, 40),
		(40, 41),
		(41, 42),
		(-5, -6),
		(-6, -7),
		(-7, -8),
		(-8, -9),
		(-9, 24),
		(24, -10),
		(-10, 25),
		(-13, -12),
		(-12, -11),
		(-11, 25),
		(42, 43),
		(43, 44),
		(44, 45),
		(45, 46),
		(45, 57),
		(57, 47),
		(-99, -100),
		(-100, 81),
		(81, 48),
		(48, 49),
		(49, 50),
		(50, 51),
		(45, 52),
		(52, 53),
		(2, 54),
		(54, 55),
		(47, 56),
		(55, 58),
		(54, 59),
		(14, 59),
		(61, 60),
		(17, 61),
		(12, 62),
		(62, 63),
		(63, 64),
		(64, 65),
		(62, 66),
		(41, 67),
		(19, 67),
		(88, 84),
		(89, 87),
		(87, 82),
		(90, 83),
		(83, 68),
		(68, 69),
		(201, 71),
		(71, 72),
		(72, 73),
		(69, 74),
		(69, 75),
		(69, 76),
		(76, 77),
		(69, 78),
		(69, 79),
		(69, 80),
		(12, 70),
		(84, 70),
		(84, 85),
		(85, 86),
		(87, 88),
		(81, 89),
		(89, 90),
		(65, 60),
		(18, 91),
		(58, 91),
		(82, 68),
		(92, 93),
		(93, 91),
		(92, 94),
		(91, 142),
		(142, 95),
		(93, 96),
		(96, 97),
		(66, 98),
		(98, 99),
		(-50, 100),
		(100, 101),
		(101, 102),
		(101, 103),
		(101, 104),
		(104, 105),
		(100, 106),
		(106, 107),
		(205, 108),
		(12, 109),
		(109, 110),
		(110, 111),
		(110, 112),
		(109, 113),
		(2, 113),
		(13, 113),
		(93, 114),
		(-200, 364),
		(364, 115),
		(-200, 116),
		(116, 117),
		(72, 118),
		(116, 119),
		(116, 120),
		(116, 121),
		(116, 122),
		(116, 123),
		(113, 124),
		(62, 124),
		(113, 125),
		(125, 126),
		(126, 127),
		(126, 128),
		(100, 139),
		(139, 130),
		(129, 134),
		(134, 130),
		(133, 130),
		(130, 140),
		(140, 131),
		(-50, 132),
		(132, 133),
		(38, 135),
		(135, 136),
		(135, 137),
		(136, 138),
		(141, 131),
		(41, 143),
		(66, 143),
		(143, 144),
		(144, 145),
		(145, 146),
		(19, 147),
		(45, 147),
		(14, 148),
		(62, 148),
		(148, 149),
		(149, 150),
		(147, 150),
		(160, 150),
		(66, 150),
		(150, 151),
		(152, 153),
		(153, 154),
		(154, 155),
		(151, 156),
		(64, 157),
		(157, 158),
		(154, 159),
		(150, 159),
		(67, 160),
		(160, 161),
		(156, 267),
		(161, 162),
		(162, 163),
		(163, 164),
		(166, 167),
		(126, 167),
		(167, 168),
		(169, 170),
		(167, 170),
		(169, 171),
		(171, 172),
		(95, 173),
		(173, 174),
		(174, 175),
		(175, 176),
		(175, 177),
		(177, 178),
		(178, 179),
		(179, 180),
		(174, 181),
		(144, 181),
		(45, 181),
		(60, 181),
		(181, 182),
		(182, 183),
		(183, 184),
		(60, 185),
		(185, 186),
		(110, 187),
		(187, 188),
		(188, 189),
		(189, 190),
		(190, 191),
		(191, 192),
		(192, 193),
		(62, 194),
		(125, 194),
		(131, 195),
		(195, 196),
		(131, 197),
		(197, 198),
		(70, 199),
		(199, 200),
		(200, 201),
		(201, 459),
		(459, 202),
		(202, 203),
		(106, 204),
		(204, 205),
		(180, 206),
		(16, 208),
		(207, 208),
		(208, 209),
		(209, 95),
		(185, 210),
		(210, 211),
		(60, 212),
		(151, 212),
		(156, 213),
		(183, 213),
		(211, 214),
		(277, 216),
		(156, 217),
		(217, 218),
		(156, 219),
		(218, 219),
		(219, 220),
		(156, 221),
		(216, 221),
		(13, 223),
		(223, 224),
		(64, 224),
		(224, 225),
		(225, 226),
		(226, 227),
		(227, 228),
		(228, 229),
		(161, 229),
		(230, 231),
		(231, 152),
		(164, 222),
		(100, 232),
		(160, 232),
		(196, 233),
		(164, 233),
		(234, 235),
		(235, 236),
		(21, 236),
		(147, 237),
		(69, 237),
		(19, 238),
		(161, 239),
		(239, 241),
		(239, 240),
		(242, 243),
		(202, 244),
		(21, 244),
		(242, 255),
		(244, 255),
		(255, 245),
		(242, 477),
		(477, 478),
		(478, 246),
		(246, 247),
		(247, 248),
		(247, 249),
		(249, 250),
		(242, 251),
		(52, 252),
		(198, 252),
		(52, 253),
		(252, 254),
		(216, 214),
		(183, 256),
		(462, 257),
		(462, 258),
		(194, 259),
		(259, 260),
		(260, 261),
		(38, 262),
		(262, 265),
		(265, 266),
		(138, 263),
		(254, 264),
		(213, 264),
		(267, 268),
		(268, 162),
		(91, 269),
		(200, 269),
		(269, 270),
		(156, 270),
		(269, 271),
		(271, 272),
		(48, 273),
		(228, 274),
		(462, 274),
		(170, 275),
		(215, 276),
		(276, 277),
		(277, 278),
		(277, 279),
		(277, 280),
		(277, 281),
		(281, 282),
		(101, 282),
		(277, 283),
		(164, 283),
		(202, 284),
		(164, 284),
		(82, 285),
		(286, 287),
		(286, 288),
		(200, 288),
		(289, 290),
		(289, 291),
		(21, 291),
		(291, 292),
		(292, 293),
		(62, 293),
		(293, 294),
		(144, 295),
		(295, 296),
		(296, 297),
		(297, 298),
		(298, 299),
		(299, 300),
		(300, 301),
		(301, 302),
		(162, 303),
		(303, 304),
		(146, 304),
		(304, 305),
		(304, 306),
		(185, 307),
		(164, 307),
		(185, 308),
		(164, 308),
		(185, 309),
		(228, 310),
		(156, 310),
		(-850, 311),
		(-850, -825),
		(-850, -810),
		(-825, -820),
		(-825, -815),
		(311, 61),
		(19, 312),
		(115, 313),
		(-750, 314),
		(315, -600),
		(115, 316),
		(62, 316),
		(115, 317),
		(317, 318),
		(115, 319),
		(314, 320),
		(320, 321),
		(115, 322),
		(315, 0),
		(315, -5),
		(115, 323),
		(320, 324),
		(321, 325),
		(320, 327),
		(327, 328),
		(328, 329),
		(329, 330),
		(329, 331),
		(329, 332),
		(-750, 315),
		(-820, -99),
		(-7000, -6000),
		(-6000, -5000),
		(-5000, -4000),
		(-4000, -2000),
		(-2000, -1000),
		(-7000, -900),
		(-900, -750),
		(-1000, -750),
		(-900, -850),
		(-1000, -725),
		(-4000, -800),
		(-800, -775),
		(-775, -500),
		(-500, -450),
		(321, 333),
		(321, 334),
		(321, 335),
		(320, 337),
		(337, 338),
		(321, 339),
		(320, 343),
		(343, 344),
		(320, 345),
		(-750, 346),
		(346, 347),
		(358, 348),
		(-750, 349),
		(13, 350),
		(350, 351),
		(351, 352),
		(337, 353),
		(346, 354),
		(320, 355),
		(320, 356),
		(356, 357),
		(70, 357),
		(-750, 358),
		(321, 359),
		(359, 360),
		(320, 361),
		(-600, 361),
		(361, 362),
		(364, 363),
		(321, 365),
		(156, 356),
		(275, 367),
		(275, 368),
		(275, 369),
		(275, 370),
		(156, 372),
		(185, 372),
		(45, 373),
		(164, 374),
		(374, 375),
		(-450, 376),
		(376, 377),
		(377, 378),
		(6, 379),
		(6, 380),
		(14, 381),
		(379, 381),
		(380, 381),
		(8, 382),
		(381, 382),
		(379, 383),
		(380, 383),
		(382, 384),
		(383, 384),
		(384, 377),
		(45, 366),
		(69, 385),
		(156, 385),
		(68, 386),
		(386, 387),
		(74, 387),
		(387, 388),
		(388, 389),
		(389, 390),
		(390, 391),
		(391, 392),
		(390, 393),
		(81, 394),
		(20, 394),
		(394, 395),
		(395, 396),
		(13, -50),
		(31, 397),
		(397, 398),
		(398, 399),
		(398, 92),
		(399, 400),
		(400, 401),
		(401, 402),
		(402, 396),
		(402, 403),
		(185, 404),
		(404, 405),
		(161, 405),
		(209, 406),
		(398, 407),
		(407, 408),
		(408, 409),
		(407, 410),
		(410, 411),
		(62, 412),
		(412, 413),
		(19, 413),
		(115, 413),
		(156, 414),
		(414, 413),
		(66, 415),
		(415, 413),
		(147, 416),
		(416, 413),
		(7, 417),
		(417, 418),
		(10, 418),
		(418, 413),
		(-778, -777),
		(-777, 315),
		(-777, 419),
		(419, 420),
		(420, 421),
		(421, 422),
		(66, 422),
		(422, 423),
		(413, 423),
		(68, 424),
		(161, 425),
		(425, 413),
		(27, 426),
		(426, 427),
		(115, 428),
		(428, 425),
		(428, 429),
		(428, 430),
		(429, 430),
		(22, 430),
		(161, 431),
		(431, 413),
		(413, 432),
		(432, 433),
		(19, 434),
		(384, 435),
		(434, 435),
		(238, 436),
		(437, 438),
		(438, 436),
		(398, 439),
		(-100, 439),
		(439, 440),
		(440, 441),
		(441, 436),
		(45, 442),
		(442, 443),
		(443, 444),
		(443, 312),
		(444, 445),
		(378, 442),
		(38, 446),
		(-100, 446),
		(82, 447),
		(447, 74),
		(-100, 448),
		(448, 449),
		(68, 449),
		(449, 450),
		(450, 451),
		(449, 452),
		(449, 453),
		(449, 454),
		(449, 455),
		(203, 72),
		(202, 456),
		(202, 457),
		(203, 458),
		(156, 458),
		(449, 460),
		(459, 460),
		(446, 242),
		(459, 166),
		(151, 166),
		(166, 169),
		(439, 461),
		(461, 230),
		(-810, 215),
		(164, 462),
		(475, 463),
		(463, 371),
		(168, 464),
		(275, 465),
		(465, 466),
		(466, 467),
		(467, 468),
		(172, 469),
		(469, 470),
		(469, 471),
		(275, 472),
		(472, 473),
		(275, 474),
		(474, 475),
		(475, 476),
		(21, 165),
		(131, 165)
	]

langParams :: GraphvizParams String String () String
langParams = nonClusteredParams {
		globalAttributes = ga,
		fmtNode = fn,
		fmtEdge = fe
	}
	where
		ga = [
			GraphAttrs [
				(BgColor . X11Color) Transparent
				],
			NodeAttrs [
				Shape PlainText,
				(FillColor . X11Color) Transparent,
				Style [SItem Filled []]
				]
			]

		fn (n,l) = [(Label . StrLabel) l]
		fe (f,t,l) = [(Label . StrLabel) l]

main :: IO ()
main = putStr $ printDotGraph $ graphToDot langParams langGraph